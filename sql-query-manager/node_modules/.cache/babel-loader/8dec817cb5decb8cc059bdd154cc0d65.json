{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\QueryVault\\\\sql-query-manager\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport QueryList from './components/QueryList';\nimport QueryModal from './components/QueryModal';\nimport TagFilter from './components/TagFilter';\nimport AddQueryModal from './components/AddQueryModal';\nimport { getAllQueries, saveQuery, searchQueries } from './components/Storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [queries, setQueries] = useState([]);\n  const [filteredQueries, setFilteredQueries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedQuery, setSelectedQuery] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [selectedTag, setSelectedTag] = useState('');\n  const [showAddModal, setShowAddModal] = useState(false);\n  useEffect(() => {\n    async function fetchQueries() {\n      try {\n        const storedQueries = await getAllQueries();\n        setQueries(storedQueries);\n        setFilteredQueries(storedQueries);\n\n        // Extraer tags únicos de las consultas\n        const allTags = [...new Set(storedQueries.flatMap(q => q.tags || []))];\n        setTags(allTags);\n      } catch (error) {\n        console.error('Error cargando consultas:', error);\n      }\n    }\n    fetchQueries();\n  }, []);\n  const handleSaveQuery = async nuevaConsulta => {\n    try {\n      const consultaGuardada = await saveQuery(nuevaConsulta);\n      const updatedQueries = [...queries, consultaGuardada];\n      setQueries(updatedQueries);\n      setFilteredQueries(updatedQueries);\n\n      // Actualizar tags\n      const allTags = [...new Set(updatedQueries.flatMap(q => q.tags || []))];\n      setTags(allTags);\n    } catch (error) {\n      console.error('Error guardando consulta:', error);\n      alert('Error al guardar la consulta. Intenta nuevamente.');\n    }\n  };\n  const handleSearch = term => {\n    setSearchTerm(term);\n    filterQueries(term, selectedTag);\n  };\n  const handleTagSelect = tag => {\n    setSelectedTag(tag);\n    filterQueries(searchTerm, tag);\n  };\n  const filterQueries = (term, tag) => {\n    const lowerTerm = term.toLowerCase();\n    const filtered = queries.filter(query => {\n      const matchesTitle = query.title.toLowerCase().includes(lowerTerm);\n      const matchesContent = query.content.toLowerCase().includes(lowerTerm);\n      const matchesTag = tag ? query.tags.includes(tag) : true;\n      return (matchesTitle || matchesContent) && matchesTag;\n    });\n    setFilteredQueries(filtered);\n  };\n  const handleQueryClick = query => {\n    setSelectedQuery(query);\n  };\n  const closeModal = () => {\n    setSelectedQuery(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SQL Query Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary add-query-btn\",\n        onClick: () => setShowAddModal(true),\n        children: \"+ Agregar Consulta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      onSearchChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TagFilter, {\n      tags: tags,\n      onTagSelect: handleTagSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QueryList, {\n      queries: filteredQueries,\n      onTitleClick: handleQueryClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), selectedQuery && /*#__PURE__*/_jsxDEV(QueryModal, {\n      query: selectedQuery,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddQueryModal, {\n      isOpen: showAddModal,\n      onClose: () => setShowAddModal(false),\n      onSave: handleSaveQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"hLdvJw0vkDnQlOyB4wcbw59HhEI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","QueryList","QueryModal","TagFilter","AddQueryModal","getAllQueries","saveQuery","searchQueries","jsxDEV","_jsxDEV","App","_s","queries","setQueries","filteredQueries","setFilteredQueries","searchTerm","setSearchTerm","selectedQuery","setSelectedQuery","tags","setTags","selectedTag","setSelectedTag","showAddModal","setShowAddModal","fetchQueries","storedQueries","allTags","Set","flatMap","q","error","console","handleSaveQuery","nuevaConsulta","consultaGuardada","updatedQueries","alert","handleSearch","term","filterQueries","handleTagSelect","tag","lowerTerm","toLowerCase","filtered","filter","query","matchesTitle","title","includes","matchesContent","content","matchesTag","handleQueryClick","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSearchChange","onTagSelect","onTitleClick","onClose","isOpen","onSave","_c","$RefreshReg$"],"sources":["C:/GitHub/QueryVault/sql-query-manager/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport QueryList from './components/QueryList';\nimport QueryModal from './components/QueryModal';\nimport TagFilter from './components/TagFilter';\nimport AddQueryModal from './components/AddQueryModal';\nimport {getAllQueries, saveQuery, searchQueries} from './components/Storage';\n\nconst App = () => {\n    const [queries, setQueries] = useState([]);\n    const [filteredQueries, setFilteredQueries] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [selectedQuery, setSelectedQuery] = useState(null);\n    const [tags, setTags] = useState([]);\n    const [selectedTag, setSelectedTag] = useState('');\n    const [showAddModal, setShowAddModal] = useState(false);\n\n    useEffect(() => {\n        async function fetchQueries() {\n            try {\n                const storedQueries = await getAllQueries();\n                setQueries(storedQueries);\n                setFilteredQueries(storedQueries);\n                \n                // Extraer tags únicos de las consultas\n                const allTags = [...new Set(storedQueries.flatMap(q => q.tags || []))];\n                setTags(allTags);\n            } catch (error) {\n                console.error('Error cargando consultas:', error);\n            }\n        }\n        \n        fetchQueries();\n    }, []);\n\n    const handleSaveQuery = async (nuevaConsulta) => {\n        try {\n            const consultaGuardada = await saveQuery(nuevaConsulta);\n            const updatedQueries = [...queries, consultaGuardada];\n            setQueries(updatedQueries);\n            setFilteredQueries(updatedQueries);\n            \n            // Actualizar tags\n            const allTags = [...new Set(updatedQueries.flatMap(q => q.tags || []))];\n            setTags(allTags);\n        } catch (error) {\n            console.error('Error guardando consulta:', error);\n            alert('Error al guardar la consulta. Intenta nuevamente.');\n        }\n    };\n\n    const handleSearch = (term) => {\n        setSearchTerm(term);\n        filterQueries(term, selectedTag);\n    };\n\n    const handleTagSelect = (tag) => {\n        setSelectedTag(tag);\n        filterQueries(searchTerm, tag);\n    };\n\n    const filterQueries = (term, tag) => {\n        const lowerTerm = term.toLowerCase();\n        const filtered = queries.filter(query => {\n            const matchesTitle = query.title.toLowerCase().includes(lowerTerm);\n            const matchesContent = query.content.toLowerCase().includes(lowerTerm);\n            const matchesTag = tag ? query.tags.includes(tag) : true;\n            return (matchesTitle || matchesContent) && matchesTag;\n        });\n        setFilteredQueries(filtered);\n    };\n\n    const handleQueryClick = (query) => {\n        setSelectedQuery(query);\n    };\n\n    const closeModal = () => {\n        setSelectedQuery(null);\n    };\n\n    return (\n        <div className=\"app\">\n            <div className=\"app-header\">\n                <h1>SQL Query Manager</h1>\n                <button \n                    className=\"btn btn-primary add-query-btn\"\n                    onClick={() => setShowAddModal(true)}\n                >\n                    + Agregar Consulta\n                </button>\n            </div>\n            \n            <SearchBar \n                searchTerm={searchTerm}\n                onSearchChange={handleSearch} \n            />\n            <TagFilter tags={tags} onTagSelect={handleTagSelect} />\n            <QueryList \n                queries={filteredQueries} \n                onTitleClick={handleQueryClick} \n            />\n            \n            {selectedQuery && (\n                <QueryModal query={selectedQuery} onClose={closeModal} />\n            )}\n            \n            <AddQueryModal \n                isOpen={showAddModal}\n                onClose={() => setShowAddModal(false)}\n                onSave={handleSaveQuery}\n            />\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}