{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\QueryVault\\\\sql-query-manager\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport QueryList from './components/QueryList';\nimport QueryModal from './components/QueryModal';\nimport TagFilter from './components/TagFilter';\nimport AddQueryModal from './components/AddQueryModal';\nimport { getAllQueries, saveQuery } from './components/Storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [queries, setQueries] = useState([]);\n  const [filteredQueries, setFilteredQueries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedQuery, setSelectedQuery] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [selectedTag, setSelectedTag] = useState('');\n  const [showAddModal, setShowAddModal] = useState(false);\n  useEffect(() => {\n    async function fetchQueries() {\n      try {\n        const storedQueries = await getAllQueries();\n        setQueries(storedQueries);\n        setFilteredQueries(storedQueries);\n\n        // Extraer tags únicos de las consultas\n        const allTags = [...new Set(storedQueries.flatMap(q => q.tags || []))];\n        setTags(allTags);\n      } catch (error) {\n        console.error('Error cargando consultas:', error);\n      }\n    }\n    fetchQueries();\n  }, []);\n  const handleSaveQuery = async nuevaConsulta => {\n    try {\n      const consultaGuardada = await saveQuery(nuevaConsulta);\n      const updatedQueries = [...queries, consultaGuardada];\n      setQueries(updatedQueries);\n      setFilteredQueries(updatedQueries);\n\n      // Actualizar tags\n      const allTags = [...new Set(updatedQueries.flatMap(q => q.tags || []))];\n      setTags(allTags);\n    } catch (error) {\n      console.error('Error guardando consulta:', error);\n      alert('Error al guardar la consulta. Intenta nuevamente.');\n    }\n  };\n  const handleSearch = async term => {\n    setSearchTerm(term);\n    if (term.trim() === '') {\n      // Si no hay término de búsqueda, mostrar todas las consultas\n      setFilteredQueries(queries);\n    } else {\n      // Filtrar localmente primero para respuesta rápida\n      const localFiltered = queries.filter(query => {\n        const matchesTitle = query.title.toLowerCase().includes(term.toLowerCase());\n        const matchesContent = query.content.toLowerCase().includes(term.toLowerCase());\n        const matchesTag = selectedTag ? query.tags.includes(selectedTag) : true;\n        return (matchesTitle || matchesContent) && matchesTag;\n      });\n      setFilteredQueries(localFiltered);\n    }\n  };\n  const handleTagSelect = tag => {\n    setSelectedTag(tag);\n\n    // Aplicar filtro de tag y búsqueda\n    const filtered = queries.filter(query => {\n      const matchesSearch = searchTerm === '' || query.title.toLowerCase().includes(searchTerm.toLowerCase()) || query.content.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesTag = tag === '' || query.tags.includes(tag);\n      return matchesSearch && matchesTag;\n    });\n    setFilteredQueries(filtered);\n  };\n  const handleQueryClick = query => {\n    setSelectedQuery(query);\n  };\n  const closeModal = () => {\n    setSelectedQuery(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SQL Query Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary add-query-btn\",\n        onClick: () => setShowAddModal(true),\n        children: \"+ Agregar Consulta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      onSearchChange: handleSearch,\n      queries: queries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TagFilter, {\n      tags: tags,\n      onTagSelect: handleTagSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QueryList, {\n      queries: filteredQueries,\n      onTitleClick: handleQueryClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), selectedQuery && /*#__PURE__*/_jsxDEV(QueryModal, {\n      query: selectedQuery,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddQueryModal, {\n      isOpen: showAddModal,\n      onClose: () => setShowAddModal(false),\n      onSave: handleSaveQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"hLdvJw0vkDnQlOyB4wcbw59HhEI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","QueryList","QueryModal","TagFilter","AddQueryModal","getAllQueries","saveQuery","jsxDEV","_jsxDEV","App","_s","queries","setQueries","filteredQueries","setFilteredQueries","searchTerm","setSearchTerm","selectedQuery","setSelectedQuery","tags","setTags","selectedTag","setSelectedTag","showAddModal","setShowAddModal","fetchQueries","storedQueries","allTags","Set","flatMap","q","error","console","handleSaveQuery","nuevaConsulta","consultaGuardada","updatedQueries","alert","handleSearch","term","trim","localFiltered","filter","query","matchesTitle","title","toLowerCase","includes","matchesContent","content","matchesTag","handleTagSelect","tag","filtered","matchesSearch","handleQueryClick","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSearchChange","onTagSelect","onTitleClick","onClose","isOpen","onSave","_c","$RefreshReg$"],"sources":["C:/GitHub/QueryVault/sql-query-manager/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport QueryList from './components/QueryList';\nimport QueryModal from './components/QueryModal';\nimport TagFilter from './components/TagFilter';\nimport AddQueryModal from './components/AddQueryModal';\nimport {getAllQueries, saveQuery} from './components/Storage';\n\nconst App = () => {\n    const [queries, setQueries] = useState([]);\n    const [filteredQueries, setFilteredQueries] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [selectedQuery, setSelectedQuery] = useState(null);\n    const [tags, setTags] = useState([]);\n    const [selectedTag, setSelectedTag] = useState('');\n    const [showAddModal, setShowAddModal] = useState(false);\n\n    useEffect(() => {\n        async function fetchQueries() {\n            try {\n                const storedQueries = await getAllQueries();\n                setQueries(storedQueries);\n                setFilteredQueries(storedQueries);\n                \n                // Extraer tags únicos de las consultas\n                const allTags = [...new Set(storedQueries.flatMap(q => q.tags || []))];\n                setTags(allTags);\n            } catch (error) {\n                console.error('Error cargando consultas:', error);\n            }\n        }\n        \n        fetchQueries();\n    }, []);\n\n    const handleSaveQuery = async (nuevaConsulta) => {\n        try {\n            const consultaGuardada = await saveQuery(nuevaConsulta);\n            const updatedQueries = [...queries, consultaGuardada];\n            setQueries(updatedQueries);\n            setFilteredQueries(updatedQueries);\n            \n            // Actualizar tags\n            const allTags = [...new Set(updatedQueries.flatMap(q => q.tags || []))];\n            setTags(allTags);\n        } catch (error) {\n            console.error('Error guardando consulta:', error);\n            alert('Error al guardar la consulta. Intenta nuevamente.');\n        }\n    };\n\n    const handleSearch = async (term) => {\n        setSearchTerm(term);\n        \n        if (term.trim() === '') {\n            // Si no hay término de búsqueda, mostrar todas las consultas\n            setFilteredQueries(queries);\n        } else {\n            // Filtrar localmente primero para respuesta rápida\n            const localFiltered = queries.filter(query => {\n                const matchesTitle = query.title.toLowerCase().includes(term.toLowerCase());\n                const matchesContent = query.content.toLowerCase().includes(term.toLowerCase());\n                const matchesTag = selectedTag ? query.tags.includes(selectedTag) : true;\n                return (matchesTitle || matchesContent) && matchesTag;\n            });\n            \n            setFilteredQueries(localFiltered);\n        }\n    };\n\n    const handleTagSelect = (tag) => {\n        setSelectedTag(tag);\n        \n        // Aplicar filtro de tag y búsqueda\n        const filtered = queries.filter(query => {\n            const matchesSearch = searchTerm === '' || \n                query.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                query.content.toLowerCase().includes(searchTerm.toLowerCase());\n            const matchesTag = tag === '' || query.tags.includes(tag);\n            return matchesSearch && matchesTag;\n        });\n        \n        setFilteredQueries(filtered);\n    };\n\n    const handleQueryClick = (query) => {\n        setSelectedQuery(query);\n    };\n\n    const closeModal = () => {\n        setSelectedQuery(null);\n    };\n\n    return (\n        <div className=\"app\">\n            <div className=\"app-header\">\n                <h1>SQL Query Manager</h1>\n                <button \n                    className=\"btn btn-primary add-query-btn\"\n                    onClick={() => setShowAddModal(true)}\n                >\n                    + Agregar Consulta\n                </button>\n            </div>\n            \n            <SearchBar \n                searchTerm={searchTerm}\n                onSearchChange={handleSearch}\n                queries={queries}\n            />\n            <TagFilter tags={tags} onTagSelect={handleTagSelect} />\n            <QueryList \n                queries={filteredQueries} \n                onTitleClick={handleQueryClick} \n            />\n            \n            {selectedQuery && (\n                <QueryModal query={selectedQuery} onClose={closeModal} />\n            )}\n            \n            <AddQueryModal \n                isOpen={showAddModal}\n                onClose={() => setShowAddModal(false)}\n                onSave={handleSaveQuery}\n            />\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}